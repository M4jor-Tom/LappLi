name: Application CI
on: [push, pull_request]
jobs:
    pipeline:
        name: LappLi pipeline
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 14.17.6
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 14.17.6
            - uses: actions/setup-java@v2
              with:
                  distribution: 'temurin'
                  java-version: 11
            - name: Install node.js packages
              run: npm install
            - name: Run backend test
              run: |
                  chmod +x mvnw
                  npm run ci:backend:test
            - name: Run frontend test
              run: npm run ci:frontend:test
            - name: Analyze code with SonarQube
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: |
                  if [ ! -z "$SONAR_TOKEN" ]; then
                      ./mvnw -ntp initialize sonar:sonar -Dsonar.host.url=https://sonarcloud.io
                  else
                      echo No SONAR_TOKEN, skipping...
                  fi
            - name: Package application
              run: npm run java:jar:prod
            - name: Build and publish docker image
              if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
              run: |
                  GIT_TAG=:${GITHUB_REF#refs/tags/}
                  DOCKER_TAG=${GIT_TAG#:refs/heads/main}
                  ./mvnw -ntp jib:build -Djib.to.image=jhipster/lapp-li${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}"
